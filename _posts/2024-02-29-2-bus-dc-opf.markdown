---
layout: post
title:  "Simple 2-Bus Network DC - OPF"
date:   2024-02-29 09:30:36 +0530
categories: Python Pyomo Optimization
---

There are some necessary conditions that make the DC power flow acceptable as an approximate solution for AC power flow such as:

• The ratio of $x_{ij}/r_{ij}$ should be large enough that $r_{ij}$ can be neglected.

• The voltage magnitudes are approximately $1$ pu.
Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse

```javascript
def OF(m):
    return sum(m.a[g]*m.P[g]**2 + m.b[g]*m.P[g] + m.c[g] for g in m.GEN)
m.OF = Objective(rule=OF, sense=minimize)

def active_power_balance(m):
    return m.P[1] == m.P12
m.active_power_balance = Constraint(rule=active_power_balance)

def power_balance(m):
    return m.P[2] + m.P12 == m.L2 / m.Sbase
m.power_balance = Constraint(rule=power_balance)

def angle_difference(m, i):
    if i > 1:
        return m.P12 == (m.delta[i-1] - m.delta[i]) / m.X12
    else:
        return Constraint.Skip
m.angle_difference = Constraint(m.BUS, rule=angle_difference)

def power_flow_limits(m):
    return inequality(-m.P12_max, m.P12, m.P12_max)
m.power_flow_limits = Constraint(rule=power_flow_limits)
```

Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
